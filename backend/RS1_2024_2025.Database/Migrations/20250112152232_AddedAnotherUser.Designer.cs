// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RS1_2024_2025.Database;

#nullable disable

namespace RS1_2024_2025.Database.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250112152232_AddedAnotherUser")]
    partial class AddedAnotherUser
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RS1_2024_2025.Domain.Entities.Admin", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<bool>("CanApproveRequests")
                        .HasColumnType("bit");

                    b.Property<bool>("CanViewLogs")
                        .HasColumnType("bit");

                    b.Property<int>("MyAppUserID")
                        .HasColumnType("int");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("MyAppUserID");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("RS1_2024_2025.Domain.Entities.Attendance", b =>
                {
                    b.Property<int>("LessonID")
                        .HasColumnType("int");

                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.Property<bool>("IsPresent")
                        .HasColumnType("bit");

                    b.HasKey("LessonID", "StudentID");

                    b.HasIndex("StudentID");

                    b.ToTable("Attendances");
                });

            modelBuilder.Entity("RS1_2024_2025.Domain.Entities.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("RS1_2024_2025.Domain.Entities.City", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("RS1_2024_2025.Domain.Entities.Lesson", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LessonDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Mode")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.Property<int>("SubjectID")
                        .HasColumnType("int");

                    b.Property<int>("TutorID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("StudentID");

                    b.HasIndex("SubjectID");

                    b.HasIndex("TutorID");

                    b.ToTable("Lessons");
                });

            modelBuilder.Entity("RS1_2024_2025.Domain.Entities.Models.Auth.Message", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<int>("ReceiverID")
                        .HasColumnType("int");

                    b.Property<int>("SenderID")
                        .HasColumnType("int");

                    b.Property<DateTime>("SentAt")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("ReceiverID");

                    b.HasIndex("SenderID");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("RS1_2024_2025.Domain.Entities.MyAppUser", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfileImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CityId");

                    b.ToTable("MyAppUsers");
                });

            modelBuilder.Entity("RS1_2024_2025.Domain.Entities.MyAuthenticationToken", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("IpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MyAppUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RecordedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("MyAppUserId");

                    b.ToTable("MyAuthenticationTokens");
                });

            modelBuilder.Entity("RS1_2024_2025.Domain.Entities.Reservation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LessonID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RejectedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.Property<int>("TutorID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("LessonID")
                        .IsUnique();

                    b.HasIndex("StudentID");

                    b.HasIndex("TutorID");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("RS1_2024_2025.Domain.Entities.ReservationPayment", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("LessonID")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ReservationID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("StudentID")
                        .HasColumnType("int");

                    b.Property<decimal>("TutorExpencesAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("TutorExpencesPaid")
                        .HasColumnType("bit");

                    b.Property<int?>("TutorID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("LessonID");

                    b.HasIndex("ReservationID");

                    b.HasIndex("StudentID");

                    b.HasIndex("TutorID");

                    b.ToTable("ReservationsPayments");
                });

            modelBuilder.Entity("RS1_2024_2025.Domain.Entities.Review", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReviewDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReviewText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.Property<int>("TutorID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("StudentID");

                    b.HasIndex("TutorID");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("RS1_2024_2025.Domain.Entities.Student", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("EducationLevel")
                        .HasColumnType("int");

                    b.Property<string>("Grade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MyAppUserID")
                        .HasColumnType("int");

                    b.Property<string>("PreferredMode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("MyAppUserID");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("RS1_2024_2025.Domain.Entities.StudentSubject", b =>
                {
                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.Property<int>("SubjectID")
                        .HasColumnType("int");

                    b.HasKey("StudentID", "SubjectID");

                    b.HasIndex("SubjectID");

                    b.ToTable("StudentsSubjects");
                });

            modelBuilder.Entity("RS1_2024_2025.Domain.Entities.Subject", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DifficultyLevel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("RS1_2024_2025.Domain.Entities.SubjectCategory", b =>
                {
                    b.Property<int>("SubjectID")
                        .HasColumnType("int");

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.HasKey("SubjectID", "CategoryID");

                    b.HasIndex("CategoryID");

                    b.ToTable("SubjectsCategories");
                });

            modelBuilder.Entity("RS1_2024_2025.Domain.Entities.Tutor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Availability")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HourlyRate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MyAppUserID")
                        .HasColumnType("int");

                    b.Property<string>("Policy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Qualifications")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.Property<int>("YearsOfExperience")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("MyAppUserID");

                    b.ToTable("Tutors");
                });

            modelBuilder.Entity("RS1_2024_2025.Domain.Entities.TutorSubject", b =>
                {
                    b.Property<int>("TutorID")
                        .HasColumnType("int");

                    b.Property<int>("SubjectID")
                        .HasColumnType("int");

                    b.HasKey("TutorID", "SubjectID");

                    b.HasIndex("SubjectID");

                    b.ToTable("TutorsSubjects");
                });

            modelBuilder.Entity("RS1_2024_2025.Domain.Entities.Admin", b =>
                {
                    b.HasOne("RS1_2024_2025.Domain.Entities.MyAppUser", "MyAppUser")
                        .WithMany()
                        .HasForeignKey("MyAppUserID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("MyAppUser");
                });

            modelBuilder.Entity("RS1_2024_2025.Domain.Entities.Attendance", b =>
                {
                    b.HasOne("RS1_2024_2025.Domain.Entities.Lesson", "Lesson")
                        .WithMany("Attendances")
                        .HasForeignKey("LessonID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("RS1_2024_2025.Domain.Entities.Student", "Student")
                        .WithMany("Attendances")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Lesson");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("RS1_2024_2025.Domain.Entities.Lesson", b =>
                {
                    b.HasOne("RS1_2024_2025.Domain.Entities.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("RS1_2024_2025.Domain.Entities.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("RS1_2024_2025.Domain.Entities.Tutor", "Tutor")
                        .WithMany()
                        .HasForeignKey("TutorID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Student");

                    b.Navigation("Subject");

                    b.Navigation("Tutor");
                });

            modelBuilder.Entity("RS1_2024_2025.Domain.Entities.Models.Auth.Message", b =>
                {
                    b.HasOne("RS1_2024_2025.Domain.Entities.MyAppUser", "Receiver")
                        .WithMany("ReceivedMessages")
                        .HasForeignKey("ReceiverID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("RS1_2024_2025.Domain.Entities.MyAppUser", "Sender")
                        .WithMany("SentMessages")
                        .HasForeignKey("SenderID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Receiver");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("RS1_2024_2025.Domain.Entities.MyAppUser", b =>
                {
                    b.HasOne("RS1_2024_2025.Domain.Entities.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("City");
                });

            modelBuilder.Entity("RS1_2024_2025.Domain.Entities.MyAuthenticationToken", b =>
                {
                    b.HasOne("RS1_2024_2025.Domain.Entities.MyAppUser", "MyAppUser")
                        .WithMany()
                        .HasForeignKey("MyAppUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("MyAppUser");
                });

            modelBuilder.Entity("RS1_2024_2025.Domain.Entities.Reservation", b =>
                {
                    b.HasOne("RS1_2024_2025.Domain.Entities.Lesson", "Lesson")
                        .WithOne("Reservation")
                        .HasForeignKey("RS1_2024_2025.Domain.Entities.Reservation", "LessonID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("RS1_2024_2025.Domain.Entities.Student", "Student")
                        .WithMany("Reservations")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("RS1_2024_2025.Domain.Entities.Tutor", "Tutor")
                        .WithMany("Reservations")
                        .HasForeignKey("TutorID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Lesson");

                    b.Navigation("Student");

                    b.Navigation("Tutor");
                });

            modelBuilder.Entity("RS1_2024_2025.Domain.Entities.ReservationPayment", b =>
                {
                    b.HasOne("RS1_2024_2025.Domain.Entities.Lesson", null)
                        .WithMany("ReservationsPayment")
                        .HasForeignKey("LessonID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("RS1_2024_2025.Domain.Entities.Reservation", "Reservation")
                        .WithMany("ReservationPayments")
                        .HasForeignKey("ReservationID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("RS1_2024_2025.Domain.Entities.Student", null)
                        .WithMany("ReservationsPayment")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("RS1_2024_2025.Domain.Entities.Tutor", null)
                        .WithMany("ReservationsPayment")
                        .HasForeignKey("TutorID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("RS1_2024_2025.Domain.Entities.Review", b =>
                {
                    b.HasOne("RS1_2024_2025.Domain.Entities.Student", "Student")
                        .WithMany("Reviews")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("RS1_2024_2025.Domain.Entities.Tutor", "Tutor")
                        .WithMany("Reviews")
                        .HasForeignKey("TutorID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Student");

                    b.Navigation("Tutor");
                });

            modelBuilder.Entity("RS1_2024_2025.Domain.Entities.Student", b =>
                {
                    b.HasOne("RS1_2024_2025.Domain.Entities.MyAppUser", "MyAppUser")
                        .WithMany()
                        .HasForeignKey("MyAppUserID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("MyAppUser");
                });

            modelBuilder.Entity("RS1_2024_2025.Domain.Entities.StudentSubject", b =>
                {
                    b.HasOne("RS1_2024_2025.Domain.Entities.Student", "Student")
                        .WithMany("StudentSubjects")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("RS1_2024_2025.Domain.Entities.Subject", "Subject")
                        .WithMany("StudentSubjects")
                        .HasForeignKey("SubjectID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Student");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("RS1_2024_2025.Domain.Entities.SubjectCategory", b =>
                {
                    b.HasOne("RS1_2024_2025.Domain.Entities.Category", "Category")
                        .WithMany("SubjectCategories")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("RS1_2024_2025.Domain.Entities.Subject", "Subject")
                        .WithMany("SubjectCategories")
                        .HasForeignKey("SubjectID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("RS1_2024_2025.Domain.Entities.Tutor", b =>
                {
                    b.HasOne("RS1_2024_2025.Domain.Entities.MyAppUser", "MyAppUser")
                        .WithMany()
                        .HasForeignKey("MyAppUserID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("MyAppUser");
                });

            modelBuilder.Entity("RS1_2024_2025.Domain.Entities.TutorSubject", b =>
                {
                    b.HasOne("RS1_2024_2025.Domain.Entities.Subject", "Subject")
                        .WithMany("TutorSubjects")
                        .HasForeignKey("SubjectID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("RS1_2024_2025.Domain.Entities.Tutor", "Tutor")
                        .WithMany("TutorSubjects")
                        .HasForeignKey("TutorID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Subject");

                    b.Navigation("Tutor");
                });

            modelBuilder.Entity("RS1_2024_2025.Domain.Entities.Category", b =>
                {
                    b.Navigation("SubjectCategories");
                });

            modelBuilder.Entity("RS1_2024_2025.Domain.Entities.Lesson", b =>
                {
                    b.Navigation("Attendances");

                    b.Navigation("Reservation")
                        .IsRequired();

                    b.Navigation("ReservationsPayment");
                });

            modelBuilder.Entity("RS1_2024_2025.Domain.Entities.MyAppUser", b =>
                {
                    b.Navigation("ReceivedMessages");

                    b.Navigation("SentMessages");
                });

            modelBuilder.Entity("RS1_2024_2025.Domain.Entities.Reservation", b =>
                {
                    b.Navigation("ReservationPayments");
                });

            modelBuilder.Entity("RS1_2024_2025.Domain.Entities.Student", b =>
                {
                    b.Navigation("Attendances");

                    b.Navigation("Reservations");

                    b.Navigation("ReservationsPayment");

                    b.Navigation("Reviews");

                    b.Navigation("StudentSubjects");
                });

            modelBuilder.Entity("RS1_2024_2025.Domain.Entities.Subject", b =>
                {
                    b.Navigation("StudentSubjects");

                    b.Navigation("SubjectCategories");

                    b.Navigation("TutorSubjects");
                });

            modelBuilder.Entity("RS1_2024_2025.Domain.Entities.Tutor", b =>
                {
                    b.Navigation("Reservations");

                    b.Navigation("ReservationsPayment");

                    b.Navigation("Reviews");

                    b.Navigation("TutorSubjects");
                });
#pragma warning restore 612, 618
        }
    }
}
